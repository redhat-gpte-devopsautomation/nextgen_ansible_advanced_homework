---

# tasks file for osp.servers
  - name: debug
    debug:
      msg: "{{ item.value.name }}  {{item.value.state}} {{item.value.image}} {{item.value.flavor}} {{item.value.key_name}} {{item.value.security_group}} {{item.value.meta[0].group}} {{item.value.meta[0].deployment_name}}" 
    loop: "{{ osp_servers | dict2items }}"
  - name: Create server instances
    os_server:
      cloud:            "{{ openstack_cloud                           | default('openstack') }}"
      name:             "{{ item.value.name }}"
      state:            "{{ item.value.state                    |  default('present') }}"
      image:            "{{ item.value.image                  | default('rhel-guest') }}"
      flavor:           "{{ item.value.flavor                 | default('m1.medium') }}"
      key_name:         "{{ item.value.key_name               | default('ansible_ssh') }}"
      wait:             "{{ item.value.wait                   | default('yes') }}"
      security_groups:  "{{ item.value.security_group }}"
      delete_fip:       "{{item.value.delete_fip              | default(true) }}"
      meta: "group={{ item.value.meta[0].group }},deployment_name={{ item.value.meta[0].deployment_name }}"
      nics:
        - net-name: int_network
        #    - net-name: ext_network
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
    loop: "{{ osp_servers | dict2items }}"      
    async: 900
    poll: 0
    register: r_instances
  - name: debug
    debug:
      msg: "{{r_instances}}"
  - name: Fetch Instance Info
    os_server_info:
      cloud: openstack
    register: result
  - name: Display all variables/facts known for a host
    debug:
       msg: IP is "{{ result }}"
    #loop: "{{ result }}"
